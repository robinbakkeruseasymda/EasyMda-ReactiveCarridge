#see getSubsWithsForCrudOper
# "entity", 
# "pkType", 
# "validator" 
# "dao", 
# "daoImpl", 
# "daosrvProp", 
# "mock", 
# "searchDto" 


#============================ ZK ==========================================

[ zk.crud.serviceMock ]

save = {{
	public <%=entity%> save<%=entity%>(<%=entity%> value) 
	{
		return value;
	}
}}

retrieve = {{
	public <%=entity%> retrieve<%=entity%>(<%=pkType%> aId) 
	{
		return <%=mock%>.makeOne(0);
	}	
}}

find_all = {{
	public Collection<<%=entity%>> findAll<%=entity%>() 
	{
		return <%=mock%>.makeMany(100);
	}
}}

remove = {{
	public void remove<%=entity%>(<%=pkType%> aId)
	{
		return;
	}
}}

search = {{
	public <%=searchDto%> search<%=entity%>(<%=searchDto%> value) 
	{
		return value;
	}
}}


[ zk.crud.serviceImpl ]

save = {{
	public <%=entity%> save<%=entity%>(<%=entity%> value) 
	{
		return getService().save<%=entity%>(value);
	}
}}

retrieve = {{
	public <%=entity%> retrieve<%=entity%>(<%=pkType%> aId) 
	{
		return getService().retrieve<%=entity%>(aId);
	}	
}}

find_all = {{
	public Collection<<%=entity%>> findAll<%=entity%>() 
	{
		return getService().findAll<%=entity%>();
	}
}}

remove = {{
	public void remove<%=entity%>(<%=pkType%> aId)
	{
		getService().remove<%=entity%>(aId);
	}
}}

search = {{
	public <%=searchDto%> search<%=entity%>(<%=searchDto%> value) 
	{
		return getService().search<%=entity%>(value);
	}
}}

#---------- Rest -------------------------------

[ java.crud.restServiceImpl ]

save = {{
	@GET
	@Produces(MediaType.APPLICATION_JSON)
	@Path("save<%=entity%>")
	public String save<%=entity%>(@QueryParam("aValue") String aValue) 
	{
		logger.info("starting Rest service save<%=entity%>");
		try {
			<%=entity%> _aValue = om.readValue(aValue, <%=entity%>.class);
			<%=entity%> result = getService().save<%=entity%>(_aValue);
			return om.writeValueAsString(result);
		} catch(Exception ex) {
			logger.error("error in Rest service save<%=entity%> ",ex);
			throw new RuntimeException(ex);
		}
	}  			
}}

retrieve = {{
	@GET
	@Produces(MediaType.APPLICATION_JSON)
	@Path("retrieve<%=entity%>")
	public String retrieve<%=entity%>(@QueryParam("aValue") String aValue) 
	{
		logger.info("starting Rest service retrieve<%=entity%>");
		try {
			<%=pkType%> _aValue = om.readValue(aValue, <%=pkType%>.class);
			<%=entity%> result = getService().retrieve<%=entity%>(_aValue);
			return om.writeValueAsString(result);
		} catch(Exception ex) {
			logger.error("error in Rest service retrieve<%=entity%> ",ex);
			throw new RuntimeException(ex);
		}
	}  			
}}

find_all = {{
	@GET
	@Produces(MediaType.APPLICATION_JSON)
	@Path("findAll<%=entity%>")
	public String findAll<%=entity%>() 
	{
		logger.info("starting Rest service findAll<%=entity%>");
		try {
			Collection<<%=entity%>> result = getService().findAll<%=entity%>();
			return om.writeValueAsString(result);
		} catch(Exception ex) {
			logger.error("error in Rest service findAll<%=entity%> ",ex);
			throw new RuntimeException(ex);
		}
	}  	
}}

remove = {{
	@GET
	@Produces(MediaType.APPLICATION_JSON)
	@Path("remove<%=entity%>")
	public void remove<%=entity%>(@QueryParam("aValue") String aValue) 
	{
		logger.info("starting Rest service remove<%=entity%>");
		try {
			<%=pkType%> _aValue = om.readValue(aValue, <%=pkType%>.class);
			getService().remove<%=entity%>(_aValue);
		} catch(Exception ex) {
			logger.error("error in Rest service remove<%=entity%> ",ex);
			throw new RuntimeException(ex);
		}
	}  			
}}

search = {{
	@GET
	@Produces(MediaType.APPLICATION_JSON)
	@Path("search<%=entity%>")
	public String search<%=entity%>(@QueryParam("aValue") String aValue) 
	{
		logger.info("starting Rest service search<%=entity%>");
		try {
			<%=searchDto%> _aValue = om.readValue(aValue, <%=searchDto%>.class);
			<%=searchDto%> result = getService().search<%=entity%>(_aValue);
			return om.writeValueAsString(result);
		} catch(Exception ex) {
			logger.error("error in Rest service search<%=entity%> ",ex);
			throw new RuntimeException(ex);
		}
	}  			
}}

